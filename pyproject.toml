[build-system]
requires = [
    "flit_core >=3.2,<4",
]
build-backend = "flit_core.buildapi"

[project]
name = "wagtail-localize-smartling"
authors = [
    { name = "Ben Dickinson", email = "ben.dickinson@torchbox.com" },
]
description = "An extension for wagtail-localize that integrates with the Smartling translation platform."
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Wagtail",
    "Framework :: Wagtail :: 5",
    "Framework :: Wagtail :: 6",
]
requires-python = ">=3.8"
dynamic = [
    "version",
]
dependencies = [
    "Django>=4.2",
    "Wagtail>=5.2",
    "wagtail-localize>=1.0.0",
    "djangorestframework>=3",
    "requests",
]
[project.optional-dependencies]
test = [
    "coverage==7.5.1",
    "dj-database-url==2.1.0",
    "pre-commit==3.4.0",
    "pyright==1.1.361",
    "pytest-cov==5.0.0",
    "pytest-django==4.8.0",
    "pytest==8.1.1",
    "responses==0.25.0",
    "ruff",
    "tox",
]

[project.urls]
Home = "https://github.com/bcdickinson/wagtail-localize-smartling"

[tool.flit.module]
name = "wagtail_localize_smartling"

[tool.flit.sdist]
exclude = [
    "wagtail_localize_smartling/static_src",
    "wagtail_localize_smartling/test",
    "wagtail_localize_smartling/static/wagtail_localize_smartling/js/.gitignore",
    "testmanage.py",
    ".*",
    "*.js",
    "*.json",
    "*.ini",
    "*.yml",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.testapp.settings"

[tool.pyright]
typeCheckingMode = "standard"
reportUnnecessaryTypeIgnoreComment = true
# Make sure we're checking against the minimum supported Python version by
# default. CI will check against all supported versions for us.
pythonVersion = "3.8"
